---
- hosts: all
  sudo: yes
  gather_facts: yes


  vars:
    name: ubuntu.lt
    slug: ubuntult
    home: /opt/ubuntu.lt
    path: "{{ home }}/spirit"
    server_admin: sirexas@gmail.com
    server_name: ubuntu.lt

  tasks:

  - name: update locale
    locale_gen: name={{ item }} state=present
    with_items:
    - en_US.UTF-8
    - lt_LT.UTF-8

  - name: apt repositories
    apt_repository: repo='deb-src http://ubuntu-archive.mirror.serveriai.lt/ trusty main restricted universe' state=present

  - name: apt packages
    apt: pkg={{ item }} state=latest
    with_items:
    - build-essential
    - postgresql
    - python-psycopg2
    - python-dev
    - python-pip
    - python-virtualenv
    - apache2
    - libapache2-mod-wsgi-py3
    - git

    # Lets encrypt
    - libaugeas0
    - libssl-dev
    - libffi-dev
    - ca-certificates

  - name: apt build dependencies
    apt: pkg={{ item }} state=build-dep
    with_items:
    - python-lxml
    - python-imaging
    - python-psycopg2

  - name: create {{ slug }} user
    user: name={{ slug }} system=yes group=www-data home={{ home }}

  - name: postgresql database
    postgresql_db: >
      name={{ slug }}
      encoding='UTF-8'
      lc_collate='C.UTF-8'
      lc_ctype='C.UTF-8'
      template='template0'
    sudo_user: postgres

  - name: postgresql user
    postgresql_user: db={{ slug }} name={{ slug }} priv=ALL
    sudo_user: postgres

  - name: clone repository
    git: repo=https://github.com/sirex/ubuntu.lt dest={{ path }} force=yes
    notify: reload apache
    sudo_user: "{{ slug }}"

  - name: create virtualenv
    command: virtualenv --python=/usr/bin/python3.4 {{ home }}/venv chdir={{ path }}
    sudo_user: "{{ slug }}"

  - name: install project depencencies from requirements.txt
    command: "{{ home }}/venv/bin/pip install -r requirements.txt chdir={{ path }}"
    sudo_user: "{{ slug }}"

  # Apache

  - name: enabled apache modules
    apache2_module: name={{ item }} state=present
    with_items:
    - rewrite
    - ssl
    notify: restart apache

  - stat: path=/etc/letsencrypt/live/{{ server_name }}
    register: letsencryptcert

  - name: set up apache virtual host
    template: src=templates/apache.conf dest=/etc/apache2/sites-enabled/{{ server_name }}.conf
    notify: reload apache

  - name: create log dir
    file: path=/var/log/apache2/{{ server_name }} state=directory

  - name: start apache
    service: name=apache2 state=started

  # Let's Encrypt

  - name: install letsencrypt
    pip: name={{ item }} virtualenv=/opt/letsencrypt state=latest
    with_items:
    - letsencrypt
    - letsencrypt-apache

  - name: let's encrypt!
    command: >
      /opt/letsencrypt/bin/letsencrypt certonly
        --text
        --agree-tos
        --non-interactive
        --expand
        --domain {{ server_name }}
        --domain www.{{ server_name }}
        --email {{ server_admin }}
        --authenticator apache
      creates=/etc/letsencrypt/live/{{ server_name }}
    notify: reload apache
    register: letsencrypt

  - stat: path=/etc/letsencrypt/live/{{ server_name }}
    register: letsencryptcert
    when: letsencrypt.changed

  - name: apache config after letsencrypt
    template: src=templates/apache.conf dest=/etc/apache2/sites-enabled/{{ server_name }}.conf
    notify: reload apache
    when: letsencrypt.changed


  handlers:

  - name: restart apache
    service: name=apache2 state=restarted

  - name: reload apache
    service: name=apache2 state=reloaded
